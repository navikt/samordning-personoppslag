name: Bygg og deploy

on:
  workflow_run:
    workflows: ["Auto-merge Dependabot Patch Updates"]
    types:
      - completed
  push:
    branches:
      - main

jobs:
  build_and_tag:
    if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.actor.login == 'dependabot[bot]')}}
    name: 'Build and tag'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      checks: write
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    steps:
      # PULL REPO
      - name: Pull repo
        uses: actions/checkout@v4

      # JAVA
      - name: Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      # Gradlew Build and run test
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build and test with Gradle
        run: ./gradlew build --stacktrace

#      # SETTER DATO OG COMMIT VARIABEL
#      - name: Set date & hash
#        run: |
#          export TZ=CET
#          echo "DATE=$(date "+%Y-%m-%d--%H-%M-%S")" >> $GITHUB_ENV
#          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
#      # SETTER IMAGE VARIABEL
#      - name: Set Image
#        id: setimage
#        run: |
#          echo "IMAGE=ghcr.io/${{ github.repository }}/samordning-personoppslag:${{ env.DATE }}---${{ env.COMMIT_HASH }}" >> $GITHUB_ENV
#          echo "IMAGE=ghcr.io/${{ github.repository }}/samordning-personoppslag:${{ env.DATE }}---${{ env.COMMIT_HASH }}" >> $GITHUB_OUTPUT
#
#      # LOGGIN TO GHCR
#      - name: Login GHCR
#        uses: docker/login-action@v3.3.0
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      # PUBLISH DOCKER IMAGE
#      - name: Build and push docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: true
#          tags: ${{ env.IMAGE }}

      - name: Nais docker-build
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: pensjonsamhandling
          tag: ${{ github.event.repository.name }}
          pull: true

      - name: 'Deploy image'
        run: echo "IMAGE=${{ needs.build_and_tag.outputs.image }}"


  deployToQ1:
    needs: build_and_tag
    permissions:
      contents: read
      id-token: write
    name: Deploy NAIS Q1
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Q1
        uses: nais/deploy/actions/deploy@v2
        env:
          "CLUSTER": dev-fss
          "RESOURCE": .nais/dev_q1.yaml
          "IMAGE": ${{ needs.build_and_tag.outputs.image }}


  deployToQ2:
    needs: build_and_tag
    permissions:
      contents: read
      id-token: write
    name: Deploy NAIS Q2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Q2
        uses: nais/deploy/actions/deploy@v2
        env:
          "CLUSTER": dev-fss
          "RESOURCE": .nais/dev_q2.yaml
          "IMAGE": ${{ needs.build_and_tag.outputs.image }}


  deployToProd:
    needs:
     - build_and_tag
     - deployToQ1
     - deployToQ2
    permissions:
      contents: read
      id-token: write
    name: Deploy NAIS PROD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to PROD
        uses: nais/deploy/actions/deploy@v2
        env:
          "CLUSTER": prod-fss
          "RESOURCE": .nais/prod.yaml
          "IMAGE": ${{ needs.build_and_tag.outputs.image }}

